@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

    <!-- Web fonts/Icons -->
<link rel="stylesheet" href="~/Legacy/fonts/opensans/stylesheet.css">
<link rel="stylesheet" href="~/Legacy/fonts/ionicons/ionicons.min.css">
<link rel="stylesheet" href="~/Legacy/fonts/fontawesome/font-awesome.min.css">

    <script src="https://aframe.io/releases/1.3.0/aframe.min.js"></script>
    <!--<script src="https://unpkg.com/aframe-particle-system-component@@1.1.3/dist/aframe-particle-system-component.min.js">-->
    </script>
    <script src="~/js/lib/a-water.v0.1.1.min.js"></script>
    <script src="https://unpkg.com/aframe-extras.ocean@@%5E3.5.0/dist/aframe-extras.ocean.min.js"></script>
    <script src="https://cdn.rawgit.com/zcanter/aframe-gradient-sky/master/dist/gradientsky.min.js"></script>
    <script src="https://unpkg.com/aframe-ground-component@@0.0.4/dist/aframe-ground-component.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/donmccurdy/aframe-extras@v6.1.1/dist/aframe-extras.min.js"></script>

<!-- Let's add a sky for a background -->
<script src="https://unpkg.com/aframe-sun-sky@3.0.3/dist/aframe-sun-sky.min.js"></script>
    <!-- Vendor CSS -->
<link rel="stylesheet" href="~/Legacy/css/bootstrap.min.css">
<link rel="stylesheet" href="~/Legacy/js/lib/swiper.min.css">
<link rel="stylesheet" href="~/Legacy/js/lib/jquery.fullpage.min.css">
<link rel="stylesheet" href="~/Legacy/js/lib/vegas/vegas.min.css">

    <!-- Main CSS files -->
    <link rel="stylesheet" href="~/Legacy/css/style.css">

<div class="page-main page-fullpage main-anim" id="itempage">

    <div class="section section-twoside fp-auto-height-responsive section-item padding-none"
         data-section="item-alpha">
        <div class="section-cover-tier mask-black"></div>
        <div class="section-wrapper largewidth">

            <a-scene id="scene-root" loading-screen="dotsColor: red; backgroundColor: black" renderer="antialias: true;
                    colorManagement: true;
                    sortObjects: true;
                    physicallyCorrectLights: true;
                    toneMapping: ACESFilmic;
                    
                    maxCanvasWidth: 3840;
                    maxCanvasHeight: 2160;" style="z-index: 9999">
                <a-entity id="rain" particle-system="preset: rain; color: #24CAFF; particleCount: 5000"></a-entity>

                <a-assets>
                    <img id="sky" src="~/Legacy/img/sky-box.jpg">
                    <img id="platform" src="~/Legacy/img/ground.jpg">
                </a-assets>

                <a-entity id="sphere" geometry="primitive: sphere" material="color: #EFEFEF; shader: flat"
                          position="0 6 -5" light="type: point; intensity: 1"
                          animation="property: position; easing: easeInOutQuad; dir: alternate; dur: 1000; to: 0 4 -5; loop: true">
                </a-entity>

                <a-entity id="ocean" ocean="density: 300; width: 2000; depth: 2000; speed: 4"
                          material="color: #9CE3F9; opacity: 0.75; metalness: 0; roughness: 1" rotation="-90 0 0">
                </a-entity>

                <a-sun-sky material="side:back; sunPosition: 1.0 1.0 0.0"></a-sun-sky>
                <a-ocean ocean-state="height_offset: 1;wave_scale_multiple: 0.2;large_normal_map: @Url.Content("~/assets/water-normals/a-water-assets/water-normal-1.png") ;
    small_normal_map: @Url.Content("~/assets/water-normals/a-water-assets/water-normal-2.png");"></a-ocean>

                <a-circle src="#platform" radius="200" position="0.0 -7 0.0" rotation="-90 0 0"></a-circle>
                <a-entity text="value: press your enter (return) key to generate entities!; width:4.0; color:black; height:2.0;" position="0.0 8 -5.0"></a-entity>

                <a-entity id="light" light="type: ambient; color: #888"></a-entity>
                <a-camera id="cam" wasd-controls-enabled="true" look-controls position="0.0 8 0"></a-camera>

            </a-scene>

        </div>
    </div>

</div>

<div id="site-footer" class="page-footer">
    <!-- Left content -->
    <div class="footer-left">
        <span class="opacity-75"><i class="icon ion-android-call"></i>1-586-255-7640</span>
        <span class="opacity-75"><i class="icon ion-email"></i>work.simpleintelligence@gmail.com</span>
    </div>

    <!-- Right content -->
    <div class="footer-right">
    </div>
</div>

<script src="~/Legacy/js/lib/jquery-1.12.4.min.js"></script>
<script src="~/Legacy/js/lib/scrolloverflow.min.js"></script>
<script src="~/Legacy/js/lib/all.js"></script>
<script src="~/Legacy/js/lib/particlejs/particles.min.js"></script>

<script type="text/javascript">
    AFRAME.registerComponent('AI', {
        init: function () {
            // Reference to the scene element.
        },
        tick: function () {
            for (let i = 0; i < this.entities.length; i++) {
                console.log(this.entities[i]);
            }
            console.log('tick');
        }
    });

    $(document).ready(() => {
        $('body').find('#more').on('click', (e) => {
            e.preventDefault();


        });
    });

    setInterval(() => {
        var entities_one = document.querySelectorAll('a-box');
        var entities_two = document.querySelectorAll('a-cylinder');
        var entities_three = document.querySelectorAll('a-sphere');


        entities_one.forEach((val, ind) => {
            var dirx = Math.random();
            var diry = Math.random();
            var vel = Math.random();
            var pos = val.getAttribute('position');
            if (dirx > 0.8) {
                pos.x = pos.x + vel;
            }
            if (dirx > 0.6 && dirx < 0.8) {
                pos.x = pos.x - vel;
            }
            if (diry > 0.8) {
                pos.z = pos.z + vel;
            }
            if (diry > 0.6 && diry < 0.8) {
                pos.z = pos.z - vel;
            }
            val.setAttribute('position', pos);
        })

        entities_two.forEach((val, ind) => {
            var dirx = Math.random();
            var diry = Math.random();
            var vel = Math.random();
            var pos = val.getAttribute('position');
            if (dirx > 0.8) {
                pos.x = pos.x + vel;
            }
            if (dirx > 0.6 && dirx < 0.8) {
                pos.x = pos.x - vel;
            }
            if (diry > 0.8) {
                pos.z = pos.z + vel;
            }
            if (diry > 0.6 && diry < 0.8) {
                pos.z = pos.z - vel;
            }
            val.setAttribute('position', pos);
        })

        entities_three.forEach((val, ind) => {
            var dirx = Math.random();
            var diry = Math.random();
            var vel = Math.random();
            var pos = val.getAttribute('position');
            if (dirx > 0.8) {
                pos.x = pos.x + vel;
            }
            if (dirx > 0.6 && dirx < 0.8) {
                pos.x = pos.x - vel;
            }
            if (diry > 0.8) {
                pos.z = pos.z + vel;
            }
            if (diry > 0.6 && diry < 0.8) {
                pos.z = pos.z - vel;
            }
            val.setAttribute('position', pos);
        })
    }, 200);


    document.addEventListener('keypress', (event) => {
        var name = event.key;
        var code = event.code;
        // Alert the key name and key code on keydown
        if (code == "Enter") {
            console.log('click:', name, code)
            var objectEl = null;
            var num = Math.random();
            if (num < 0.3) {
                objectEl = document.createElement('a-sphere');
                objectEl.setAttribute('radius', 2);
            }

            if (num > 0.3 && num < 0.6) {
                objectEl = document.createElement('a-box');
                objectEl.setAttribute('width', 2);
                objectEl.setAttribute('height', 2);
                objectEl.setAttribute('depth', 2);
            }

            if (num > 0.6) {
                objectEl = document.createElement('a-cylinder');
                objectEl.setAttribute('radius', 2);
                objectEl.setAttribute('height', 2);

            }

            var color = Math.random();
            if (color > 0.0 && color < 0.1) {
                objectEl.setAttribute('color', 'red');
                objectEl.setAttribute('light', 'type: point; intensity: 1;')
            }
            if (color > 0.1 && color < 0.2) {
                objectEl.setAttribute('color', 'blue');
                objectEl.setAttribute('light', 'type: point; intensity: 1;')
            }
            if (color > 0.2 && color < 0.3) {
                objectEl.setAttribute('color', 'pink');
                objectEl.setAttribute('light', 'type: point; intensity: 1;')
            }
            if (color > 0.3 && color < 0.4) {
                objectEl.setAttribute('color', 'green');
                objectEl.setAttribute('light', 'type: point; intensity: 1;')
            }
            if (color > 0.4 && color < 0.5) {
                objectEl.setAttribute('color', 'brown');
                objectEl.setAttribute('light', 'type: point; intensity: 1;')
            }
            if (color > 0.5 && color < 0.6) {
                objectEl.setAttribute('color', 'yellow');
                objectEl.setAttribute('light', 'type: point; intensity: 1;')
            }
            if (color > 0.6 && color < 0.7) {
                objectEl.setAttribute('color', 'orange');
                objectEl.setAttribute('light', 'type: point; intensity: 1;')
            }
            if (color > 0.7 && color < 0.8) {
                objectEl.setAttribute('color', 'white');
                objectEl.setAttribute('light', 'type: point; intensity: 1;')
            }
            if (color > 0.8 && color < 0.9) {
                objectEl.setAttribute('color', 'blue');
                objectEl.setAttribute('light', 'type: point; intensity: 1;')
                //light="type: point; intensity: 1"
            }



            var pos = document.querySelector('#cam').getAttribute('position');
            console.log(pos)
            objectEl.setAttribute('AI');
            objectEl.setAttribute('position', pos);

            document.querySelector('a-scene').appendChild(objectEl);
            sphereEl.addEventListener('loaded', function () {
                console.log('sphere attached');
            });
        }
    });
</script>

<!-- Main Script files -->
<script src="~/Legacy/js/custom.js"></script>
